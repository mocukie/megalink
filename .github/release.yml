on:
  workflow_dispatch:
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        goos: [ windows, freebsd, openbsd, linux ]
        goarch: [ amd64, 386 ]

        # https://github.com/golang/go/wiki/GoArm
        include:
          - goos: linux
            goarch: arm
            goarm: 5
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm64

          - goos: freebsd
            goarch: arm
            goarm: 7
          - goos: freebsd
            goarch: arm64

          - goos: openbsd
            goarch: arm
            goarm: 7
          - goos: openbsd
            goarch: arm64

    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up env
        run: |
          export RELEASE_VERSION=${GITHUB_REF#refs/*/}
          export RELEASE_VERSION=${RELEASE_VERSION:1}
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "BUILD_LDFLAGS=-s -w -X main.version=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "ASSET_NAME=megalink_${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "TARGET_HOST=${GOOS}-${GOARCH}${GOARM:+v}${GOARM}" >> $GITHUB_ENV

      - name: Show infomation
        run: |
          echo version: v$RELEASE_VERSION $TARGET_HOST, git-${{ github.sha }}
          echo ldflags: $BUILD_LDFLAGS

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: |
          mkdir -p out
          go build -v -o out/megalink -trimpath -ldflags "${BUILD_LDFLAGS}" ./cmd/megalink

      - name: Rename Windows
        if: matrix.goos == 'windows'
        run: |
          mv out/megalink out/megalink.exe

      - name: Prepare release
        run: |
          cp LICENSE README.md ./out/

      - name: Pack
        run: |
          mv out $ASSET_NAME
          tar -czvf ${ASSET_NAME}_${TARGET_HOST}.tgz $ASSET_NAME

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.ASSET_NAME }}_${{ env.TARGET_HOST }}.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
